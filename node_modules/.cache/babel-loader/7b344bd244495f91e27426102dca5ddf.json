{"ast":null,"code":"import _objectSpread from\"/Users/LyaR/Desktop/alien-github/Alien-Tools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/LyaR/Desktop/alien-github/Alien-Tools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{createStore}from'redux';import{combineReducers}from'redux';var updateWallet=function updateWallet(wallets,updatedWallet){wallets.forEach(function(wlt,index){if(wlt.wallet_name===updatedWallet.wallet_name){wallets[index]=updatedWallet;}});return wallets;};function walletReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:JSON.parse(localStorage.getItem('wallets'));var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'SET_REDUX':state=JSON.parse(localStorage.getItem('wallets'));return state;case'ADD_WALLET':state=JSON.parse(localStorage.getItem('wallets'));state.wallets.push(action.payload);localStorage.setItem('wallets',JSON.stringify(state));state.wallets.pop(action.payload);return{wallets:[].concat(_toConsumableArray(state.wallets),[action.payload])};case'UPDATE_WALLET':state=JSON.parse(localStorage.getItem('wallets'));state.wallets=updateWallet(state.wallets,action.payload);localStorage.setItem('wallets',JSON.stringify(state));return _objectSpread({},state);case'DELETE_WALLET':state.wallets.forEach(function(wlt,index){if(wlt.wallet_name===action.payload.wallet_name){state.wallets.splice(index,1);}});localStorage.setItem('wallets',JSON.stringify(state));return _objectSpread({},state);default:return state;}}var rootReducer=combineReducers({wallets:walletReducer});var store=createStore(rootReducer);export default store;","map":{"version":3,"sources":["/Users/LyaR/Desktop/alien-github/Alien-Tools/src/store.js"],"names":["createStore","combineReducers","updateWallet","wallets","updatedWallet","forEach","wlt","index","wallet_name","walletReducer","state","JSON","parse","localStorage","getItem","action","type","push","payload","setItem","stringify","pop","splice","rootReducer","store"],"mappings":"6UAAA,OAASA,WAAT,KAA4B,OAA5B,CACA,OAASC,eAAT,KAAgC,OAAhC,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,OAAD,CAAUC,aAAV,CAA4B,CAC7CD,OAAO,CAACE,OAAR,CAAgB,SAACC,GAAD,CAAMC,KAAN,CAAgB,CAC5B,GAAID,GAAG,CAACE,WAAJ,GAAoBJ,aAAa,CAACI,WAAtC,CAAkD,CAC9CL,OAAO,CAACI,KAAD,CAAP,CAAiBH,aAAjB,CACH,CACJ,CAJD,EAKA,MAAOD,CAAAA,OAAP,CACH,CAPD,CASA,QAASM,CAAAA,aAAT,EAAoF,IAA7DC,CAAAA,KAA6D,2DAArDC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAqD,IAARC,CAAAA,MAAQ,2CAChF,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,WAAL,CACIN,KAAK,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAR,CACA,MAAOJ,CAAAA,KAAP,CACJ,IAAK,YAAL,CACIA,KAAK,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAR,CACAJ,KAAK,CAACP,OAAN,CAAcc,IAAd,CAAmBF,MAAM,CAACG,OAA1B,EACAL,YAAY,CAACM,OAAb,CAAqB,SAArB,CAAgCR,IAAI,CAACS,SAAL,CAAeV,KAAf,CAAhC,EACAA,KAAK,CAACP,OAAN,CAAckB,GAAd,CAAkBN,MAAM,CAACG,OAAzB,EACA,MAAO,CACHf,OAAO,8BAAMO,KAAK,CAACP,OAAZ,GAAqBY,MAAM,CAACG,OAA5B,EADJ,CAAP,CAGJ,IAAK,eAAL,CACIR,KAAK,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAR,CACAJ,KAAK,CAACP,OAAN,CAAgBD,YAAY,CAACQ,KAAK,CAACP,OAAP,CAAgBY,MAAM,CAACG,OAAvB,CAA5B,CACAL,YAAY,CAACM,OAAb,CAAqB,SAArB,CAAgCR,IAAI,CAACS,SAAL,CAAeV,KAAf,CAAhC,EACA,wBACOA,KADP,EAIJ,IAAK,eAAL,CACIA,KAAK,CAACP,OAAN,CAAcE,OAAd,CAAsB,SAACC,GAAD,CAAMC,KAAN,CAAgB,CAClC,GAAID,GAAG,CAACE,WAAJ,GAAoBO,MAAM,CAACG,OAAP,CAAeV,WAAvC,CAAoD,CAChDE,KAAK,CAACP,OAAN,CAAcmB,MAAd,CAAqBf,KAArB,CAA4B,CAA5B,EACH,CACJ,CAJD,EAKAM,YAAY,CAACM,OAAb,CAAqB,SAArB,CAAgCR,IAAI,CAACS,SAAL,CAAeV,KAAf,CAAhC,EACA,wBACOA,KADP,EAGJ,QACI,MAAOA,CAAAA,KAAP,CA/BR,CAiCH,CAED,GAAMa,CAAAA,WAAW,CAAGtB,eAAe,CAAC,CAChCE,OAAO,CAAEM,aADuB,CAAD,CAAnC,CAIA,GAAMe,CAAAA,KAAK,CAAGxB,WAAW,CAACuB,WAAD,CAAzB,CAEA,cAAeC,CAAAA,KAAf","sourcesContent":["import { createStore } from 'redux';\nimport { combineReducers } from 'redux';\n\nconst updateWallet = (wallets, updatedWallet) => {\n    wallets.forEach((wlt, index) => {\n        if (wlt.wallet_name === updatedWallet.wallet_name){\n            wallets[index] = updatedWallet;\n        }\n    })\n    return wallets;\n}\n\nfunction walletReducer(state = JSON.parse(localStorage.getItem('wallets')), action) {\n    switch (action.type) {\n        case 'SET_REDUX':\n            state = JSON.parse(localStorage.getItem('wallets'));\n            return state;\n        case 'ADD_WALLET':\n            state = JSON.parse(localStorage.getItem('wallets'))\n            state.wallets.push(action.payload);\n            localStorage.setItem('wallets', JSON.stringify(state));\n            state.wallets.pop(action.payload);\n            return {\n                wallets: [...state.wallets, action.payload]\n            };\n        case 'UPDATE_WALLET':\n            state = JSON.parse(localStorage.getItem('wallets'))    \n            state.wallets = updateWallet(state.wallets, action.payload);\n            localStorage.setItem('wallets', JSON.stringify(state));\n            return {\n                ...state\n            };\n\n        case 'DELETE_WALLET':\n            state.wallets.forEach((wlt, index) => {\n                if (wlt.wallet_name === action.payload.wallet_name) {\n                    state.wallets.splice(index, 1);\n                }\n            })\n            localStorage.setItem('wallets', JSON.stringify(state));\n            return {\n                ...state\n            };\n        default:\n            return state;\n    }\n}\n\nconst rootReducer = combineReducers({\n    wallets: walletReducer,\n})\n\nconst store = createStore(rootReducer);\n\nexport default store;\n\n"]},"metadata":{},"sourceType":"module"}