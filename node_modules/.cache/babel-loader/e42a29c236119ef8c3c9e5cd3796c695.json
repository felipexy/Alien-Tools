{"ast":null,"code":"import { createStore } from 'redux';\nimport { combineReducers } from 'redux';\nconst INITIAL_STATE = {\n  wallet: [{\n    wallet_name: \"\",\n    wallet_amount: \"\",\n    wallet_nfts: []\n  }]\n};\n\nfunction walletReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'ADD_WALLET':\n      console.log(action.payload);\n      debugger;\n      return { ...state,\n        wallet: [...state.wallet, action.payload]\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  wallets: walletReducer\n});\nconst store = createStore(rootReducer);\nexport default store;","map":{"version":3,"sources":["/Users/LyaR/Desktop/nft-warning/src/store.js"],"names":["createStore","combineReducers","INITIAL_STATE","wallet","wallet_name","wallet_amount","wallet_nfts","walletReducer","state","action","type","console","log","payload","rootReducer","wallets","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,CAAC;AACLC,IAAAA,WAAW,EAAE,EADR;AAELC,IAAAA,aAAa,EAAE,EAFV;AAGLC,IAAAA,WAAW,EAAE;AAHR,GAAD;AADU,CAAtB;;AAQA,SAASC,aAAT,CAAuBC,KAAK,GAAGN,aAA/B,EAA8CO,MAA9C,EAAsD;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,YAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACA;AACI,aAAO,EACH,GAAGL,KADA;AAEHL,QAAAA,MAAM,EAAE,CAAC,GAAGK,KAAK,CAACL,MAAV,EAAkBM,MAAM,CAACI,OAAzB;AAFL,OAAP;;AAIJ;AACI,aAAOL,KAAP;AATR;AAWH;;AAED,MAAMM,WAAW,GAAGb,eAAe,CAAC;AAChCc,EAAAA,OAAO,EAAER;AADuB,CAAD,CAAnC;AAIA,MAAMS,KAAK,GAAGhB,WAAW,CAACc,WAAD,CAAzB;AAEA,eAAeE,KAAf","sourcesContent":["import { createStore } from 'redux';\nimport { combineReducers } from 'redux';\n\nconst INITIAL_STATE = {\n    wallet: [{\n        wallet_name: \"\",\n        wallet_amount: \"\",\n        wallet_nfts: []\n    }]\n};\n\nfunction walletReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case 'ADD_WALLET':\n        console.log(action.payload);    \n        debugger\n            return {\n                ...state,\n                wallet: [...state.wallet, action.payload]\n            };\n        default:\n            return state;\n    }\n}\n\nconst rootReducer = combineReducers({\n    wallets: walletReducer,\n})\n\nconst store = createStore(rootReducer);\n\nexport default store;\n\n"]},"metadata":{},"sourceType":"module"}