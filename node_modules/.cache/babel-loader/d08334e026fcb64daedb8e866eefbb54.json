{"ast":null,"code":"import { createStore } from 'redux';\nimport { combineReducers } from 'redux';\n\nfunction walletReducer(state = JSON.parse(localStorage.getItem('wallets')), action) {\n  switch (action.type) {\n    case 'ADD_WALLET':\n      state = JSON.parse(localStorage.getItem('wallets'));\n      state.wallets.push(action.payload);\n      localStorage.setItem('wallets', JSON.stringify(state));\n      state.wallets.pop(action.payload);\n      return {\n        wallets: [...state.wallets, action.payload]\n      };\n\n    case 'DELETE_WALLET':\n      debugger;\n      state.wallets.filter(wlt => wlt !== action.payload.wallet_name);\n      var indexToInsert = 0;\n      state.wallets.forEach((wlt, index) => {\n        if (wlt.wallet_name === action.payload.wallet_name) {\n          debugger;\n          state.wallets.splice(index, 1);\n          indexToInsert = index;\n        }\n      });\n      localStorage.setItem('wallets', JSON.stringify(state));\n      state.wallets.splice(indexToInsert, 0, action.payload);\n      state.wallets.push(action.payload);\n      debugger;\n      return { ...state,\n        wallets: state.wallets.filter(wallet => wallet !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  wallets: walletReducer\n});\nconst store = createStore(rootReducer);\nexport default store;","map":{"version":3,"sources":["/Users/LyaR/Desktop/alien-github/Alien-Tools/src/store.js"],"names":["createStore","combineReducers","walletReducer","state","JSON","parse","localStorage","getItem","action","type","wallets","push","payload","setItem","stringify","pop","filter","wlt","wallet_name","indexToInsert","forEach","index","splice","wallet","rootReducer","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,eAAT,QAAgC,OAAhC;;AAGA,SAASC,aAAT,CAAuBC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAA/B,EAA4EC,MAA5E,EAAoF;AAChF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,YAAL;AACIN,MAAAA,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAR;AACAJ,MAAAA,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmBH,MAAM,CAACI,OAA1B;AACAN,MAAAA,YAAY,CAACO,OAAb,CAAqB,SAArB,EAAgCT,IAAI,CAACU,SAAL,CAAeX,KAAf,CAAhC;AACAA,MAAAA,KAAK,CAACO,OAAN,CAAcK,GAAd,CAAkBP,MAAM,CAACI,OAAzB;AACA,aAAO;AACHF,QAAAA,OAAO,EAAE,CAAC,GAAGP,KAAK,CAACO,OAAV,EAAmBF,MAAM,CAACI,OAA1B;AADN,OAAP;;AAGJ,SAAK,eAAL;AACI;AACAT,MAAAA,KAAK,CAACO,OAAN,CAAcM,MAAd,CAAqBC,GAAG,IAAIA,GAAG,KAAKT,MAAM,CAACI,OAAP,CAAeM,WAAnD;AACA,UAAIC,aAAa,GAAG,CAApB;AACAhB,MAAAA,KAAK,CAACO,OAAN,CAAcU,OAAd,CAAsB,CAACH,GAAD,EAAMI,KAAN,KAAgB;AAClC,YAAIJ,GAAG,CAACC,WAAJ,KAAoBV,MAAM,CAACI,OAAP,CAAeM,WAAvC,EAAoD;AAChD;AACAf,UAAAA,KAAK,CAACO,OAAN,CAAcY,MAAd,CAAqBD,KAArB,EAA4B,CAA5B;AACAF,UAAAA,aAAa,GAAGE,KAAhB;AACH;AACJ,OAND;AAOAf,MAAAA,YAAY,CAACO,OAAb,CAAqB,SAArB,EAAgCT,IAAI,CAACU,SAAL,CAAeX,KAAf,CAAhC;AACAA,MAAAA,KAAK,CAACO,OAAN,CAAcY,MAAd,CAAqBH,aAArB,EAAoC,CAApC,EAAuCX,MAAM,CAACI,OAA9C;AACAT,MAAAA,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmBH,MAAM,CAACI,OAA1B;AACA;AACA,aAAO,EACH,GAAGT,KADA;AAEHO,QAAAA,OAAO,EAAEP,KAAK,CAACO,OAAN,CAAcM,MAAd,CAAqBO,MAAM,IAAIA,MAAM,KAAKf,MAAM,CAACI,OAAjD;AAFN,OAAP;;AAIJ;AACI,aAAOT,KAAP;AA7BR;AA+BH;;AAED,MAAMqB,WAAW,GAAGvB,eAAe,CAAC;AAChCS,EAAAA,OAAO,EAAER;AADuB,CAAD,CAAnC;AAIA,MAAMuB,KAAK,GAAGzB,WAAW,CAACwB,WAAD,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore } from 'redux';\nimport { combineReducers } from 'redux';\n\n\nfunction walletReducer(state = JSON.parse(localStorage.getItem('wallets')), action) {\n    switch (action.type) {\n        case 'ADD_WALLET':\n            state = JSON.parse(localStorage.getItem('wallets'))\n            state.wallets.push(action.payload);\n            localStorage.setItem('wallets', JSON.stringify(state));\n            state.wallets.pop(action.payload);\n            return {\n                wallets: [...state.wallets, action.payload]\n            };\n        case 'DELETE_WALLET':\n            debugger\n            state.wallets.filter(wlt => wlt !== action.payload.wallet_name);\n            var indexToInsert = 0;\n            state.wallets.forEach((wlt, index) => {\n                if (wlt.wallet_name === action.payload.wallet_name) {\n                    debugger\n                    state.wallets.splice(index, 1);\n                    indexToInsert = index;\n                }\n            })\n            localStorage.setItem('wallets', JSON.stringify(state));\n            state.wallets.splice(indexToInsert, 0, action.payload);\n            state.wallets.push(action.payload);\n            debugger\n            return {\n                ...state,\n                wallets: state.wallets.filter(wallet => wallet !== action.payload)\n            };    \n        default:\n            return state;\n    }\n}\n\nconst rootReducer = combineReducers({\n    wallets: walletReducer,\n})\n\nconst store = createStore(rootReducer);\n\nexport default store;\n\n"]},"metadata":{},"sourceType":"module"}