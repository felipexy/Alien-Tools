{"ast":null,"code":"var _jsxFileName = \"/Users/LyaR/Desktop/nft-warning/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useDispatch, useSelector } from 'react-redux';\nimport green from '@material-ui/core/colors/green';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [walletName, setWalletName] = useState(\"\");\n  const wallets = useSelector(state => state.wallets);\n\n  const handleChange = e => {\n    if (e.nativeEvent.data === null) {\n      setWalletName(walletName.substring(0, walletName.length - 1));\n    } else {\n      setWalletName(walletName.concat(e.nativeEvent.data));\n    }\n  };\n\n  const handleClick = () => {\n    dispatch({\n      type: 'ADD_WALLET',\n      payload: walletName\n    });\n  };\n\n  console.log(wallets);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Coloque suas carteiras aqui, parsa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"standard-basic\",\n      label: \"carteira\",\n      onChange: event => handleChange(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddIcon, {\n      style: {\n        color: green[500]\n      },\n      fontSize: \"large\",\n      onClick: e => handleClick()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"OkYu2IWnODx+xCjb55szCeGWqq4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/LyaR/Desktop/nft-warning/src/App.js"],"names":["React","useState","TextField","AddIcon","useDispatch","useSelector","green","App","dispatch","walletName","setWalletName","wallets","state","handleChange","e","nativeEvent","data","substring","length","concat","handleClick","type","payload","console","log","event","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,gCAAlB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMU,OAAO,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA3B;;AAEA,QAAME,YAAY,GAAIC,CAAD,IAAO;AAC1B,QAAIA,CAAC,CAACC,WAAF,CAAcC,IAAd,KAAuB,IAA3B,EAAiC;AAC/BN,MAAAA,aAAa,CAACD,UAAU,CAACQ,SAAX,CAAqB,CAArB,EAAwBR,UAAU,CAACS,MAAX,GAAoB,CAA5C,CAAD,CAAb;AACD,KAFD,MAGK;AACHR,MAAAA,aAAa,CAACD,UAAU,CAACU,MAAX,CAAkBL,CAAC,CAACC,WAAF,CAAcC,IAAhC,CAAD,CAAb;AACD;AACF,GAPD;;AASA,QAAMI,WAAW,GAAG,MAAM;AACxBZ,IAAAA,QAAQ,CAAC;AAAEa,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,OAAO,EAAEb;AAA/B,KAAD,CAAR;AACD,GAFD;;AAGFc,EAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACE,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,EAAE,EAAC,gBAAd;AAA+B,MAAA,KAAK,EAAC,UAArC;AAAgD,MAAA,QAAQ,EAAEc,KAAK,IAAIZ,YAAY,CAACY,KAAD;AAA/E;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAEpB,KAAK,CAAC,GAAD;AAAd,OAAhB;AAAuC,MAAA,QAAQ,EAAC,OAAhD;AAAwD,MAAA,OAAO,EAAEQ,CAAC,IAAIM,WAAW;AAAjF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD;;GA1BQb,G;UAEUH,W,EAEDC,W;;;KAJTE,G;AA4BT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useDispatch, useSelector } from 'react-redux';\nimport green from '@material-ui/core/colors/green';\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  const [walletName, setWalletName] = useState(\"\");\n  const wallets = useSelector((state) => state.wallets);\n\n  const handleChange = (e) => {\n    if (e.nativeEvent.data === null) {\n      setWalletName(walletName.substring(0, walletName.length - 1));\n    }\n    else {\n      setWalletName(walletName.concat(e.nativeEvent.data));\n    }\n  }\n\n  const handleClick = () => {\n    dispatch({ type: 'ADD_WALLET', payload: walletName });\n  }\nconsole.log(wallets)\n  return (\n    <>\n      <h1>Coloque suas carteiras aqui, parsa</h1>\n      <TextField id=\"standard-basic\" label=\"carteira\" onChange={event => handleChange(event)} />\n      <AddIcon style={{ color: green[500] }} fontSize=\"large\" onClick={e => handleClick()} />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}